name: Train, Test, Build, and Push Docker Image

on:
  push:
    branches:
      - main

env:
  BRANCH_NAME: ${{ github.ref_name }}
  SHORT_SHA: ${{ github.sha }}

jobs:
  train-test-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Train the model
        run: python train_model.py

      - name: Run unit tests
        run: pytest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image with tags
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/iris-api
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)

          docker build -t $IMAGE_NAME:latest \
                       -t $IMAGE_NAME:${{ github.ref_name }} \
                       -t $IMAGE_NAME:${{ github.ref_name }}-$SHORT_SHA .

          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ github.ref_name }}
          docker push $IMAGE_NAME:${{ github.ref_name }}-$SHORT_SHA

  deploy:
    runs-on: ubuntu-latest
    needs: train-test-build-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GIT_GOOGLE_TOKEN }}'

      - name: Install gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: your-gcp-project-id  # <-- Replace with your actual GCP project ID

      - name: SSH and deploy MLOps app
        run: |
          gcloud compute ssh l00187422@apurva \
            --zone=europe-west2-c \
            --command="
              cd /home/l00187422/mlops && \
              rm -rf mlops-wine-quality && \
              git clone https://github.com/Apurva26-git/mlops-wine-quality.git && \
              cd mlops-wine-quality/k8s && \
              /usr/local/bin/minikube kubectl -- delete -f ./deployment.yml || true && \
              sleep 5 && \
              /usr/local/bin/minikube kubectl -- apply -f ./deployment.yml"